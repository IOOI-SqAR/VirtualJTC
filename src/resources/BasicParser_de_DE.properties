error.parse.tooManyErrorsException.errorText=\nAbgebrochen augrund zu vieler Fehler\n
error.parse.errorTextModule.0=\ Fehler
error.parse.errorTextModule.1=\ und 1 Warnung
error.parse.errorTextModule.2=\ und 
error.parse.errorTextModule.3=\ Warnungen

error.parseLine.lineNumberToLarge.errorText=Zeilennummer zu gro\u00DF
error.parseLine.illegalLineNumber.messageformat="Zeilennummer {0} beim 2K- und 4K-Betriebssystem nicht erlaubt, da ihre bin\u00E4re Form %00 oder %0D enth\u00E4lt",
error.parseLine.nextLineNumberMustBeLargerThanPrevious.errorText=Zeilennummer muss gr\u00F6\u00DFer als die vorherige sein
error.parseLine.atLeastTheFirstLineMustHaveALineNumber.errorText=Mindestens die erste Zeile muss eine BASIC-Zeilennummer haben!

error.parseInst.unknownInstruction.errorText=: Unbekannte Anweisung
error.parseInst.missingInstruction.errorText=Anweisung erwartet

error.parseELSE.isNotFirstInstInLine.errorText=ELSE muss die erste Anweisung in der hinter IF folgenden Zeile sein (mit eigener BASIC-Zeilennummer)
error.parseELSE.prevLineHasNoIF.errorText=ELSE: vorherige Zeile enth\u00E4lt kein IF
error.parseELSE.missingSemicolon.errorText=Hinter ELSE m\u00FCssen ein Semikolon und dahinter die Anweisungen folgen

error.parseLET.equalsSignExpected.errorText=\'=\' erwartet

error.parsePROC.closingSquaredBraceExpected.errorText=\']\' erwartet
error.parsePROC.equalsSignExpected.errorText=\'=\' erwartet
error.parsePROC.unknownProcedure.errorText=: Unbekannte Prozedur

error.parseTRAP.wrongTokenFound.messageformat=TO anstelle {0} erwartet

error.parseArgList.openingSquaredBracketExpected.errorText=\'[\' erwartet
error.parseArgList.commaExpected.errorText=\',\' erwartet
error.parseArgList.closingSquaredBracketExpected.errorText=\']\' erwartet

error.parseCondExpr.comparisonOperatorExpected.errorText=Vergleichsoperator \'<\', \'<=\', \'=\', \'>\' oder \'>=\' erwartet

error.parseExpr.a_m_o_x_Expected.errorText=\'A\', \'M\', \'O\' oder \'X\' erwartet

error.parsePrimExpr.closingRoundBracketExpected.errorText=\')\' erwartet
error.parsePrimExpr.unknownFunction.errorText=: Unbekannte Funktion
error.parsePrimExpr.openingRoundBracketOrNumberOrLetterOrPercentSignExpected.errorText="Ziffer, Buchstabe, \'(\' oder \'%\' erwartet"

error.parseDecNumber.numberToLarge.errorText=Zahl zu gro\u00DF

error.parseHexNumber.numberToLarge.errorText=Hexadezimalzahl zu gro\u00DF

error.parseOptStringLiteral.lineBreakFound.errorText=Zeilenumbruch in Zeichenkette
error.parseOptStringLiteral.notPrintable.messageformat=Zeichenkette enth\u00E4lt Zeichen "{0}", welches nicht im Zeichensatz des JU+TE-Computers vorkommt
error.parseOptStringLiteral.notASCII.errorText=Nicht-ASCII-Zeichen in Zeichenkette ignoriert
error.parseOptStringLiteral.stringNotTerminated.errorText=Zeichenkette nicht abgeschlossen

putError.message=Fehler
putWarning.message=Warnung
putMessage.logTextModule.0=\ in Zeile 
putMessage.logTextModule.1=, BASIC-Zeile 

error.throwUnexpectedChar.unexpectedProgramEnd.errorText=Unerwartetes Programmende
error.throwUnexpectedChar.unexpectedLineBreak.errorText=Unerwartetes Zeilenende
error.throwUnexpectedChar.unexpectedCharacter.messageformat=Unerwartetes Zeichen: "{0}"

error.throwVarExpected.variableExpected.errorText=Variable erwartet
